1
00:00:00,000 --> 00:00:03,210
[SINGING] With a viewbox
or port you have nothing to lose.

2
00:00:03,210 --> 00:00:06,210
Draw yourself in any shape
or vector you choose.

3
00:00:06,210 --> 00:00:08,757
From circles to rects,
polygons to ellipses,

4
00:00:08,757 --> 00:00:09,590
groups will connect, 

5
00:00:09,590 --> 00:00:11,690
then transform and rotate these.

6
00:00:11,690 --> 00:00:15,470
Soon you'll see where
you can be, creating

7
00:00:15,470 --> 00:00:17,180
scalable graphics with glee.

8
00:00:17,180 --> 00:00:18,596
Just you, me, and SVG.

9
00:00:23,800 --> 00:00:26,420
You're watching You, Me, & SVG.

10
00:00:26,420 --> 00:00:28,750
This is Level 4, Section 1.

11
00:00:28,750 --> 00:00:33,080
In this section we'll
be covering paths.

12
00:00:33,080 --> 00:00:36,660
So far we've been writing the
points to any of our elements

13
00:00:36,660 --> 00:00:38,930
in our SVG out by hand.

14
00:00:38,930 --> 00:00:41,100
But in real life
you're not going

15
00:00:41,100 --> 00:00:43,880
to be coming up with these
coordinates by yourself.

16
00:00:43,880 --> 00:00:45,690
You're going to be
using a program that

17
00:00:45,690 --> 00:00:48,030
will export them out for you.

18
00:00:48,030 --> 00:00:51,290
So for example, in this
Mac app called Sketch,

19
00:00:51,290 --> 00:00:53,950
we went ahead and
drew a check asset.

20
00:00:53,950 --> 00:00:57,030
If we wanted to export
this asset as an SVG,

21
00:00:57,030 --> 00:00:59,640
we'd select it, go down
to the bottom right,

22
00:00:59,640 --> 00:01:04,120
and hit the Export
button, SVG, and then we

23
00:01:04,120 --> 00:01:05,930
would save it as check.SVG.

24
00:01:13,637 --> 00:01:15,220
If we wanted to look
under the covers,

25
00:01:15,220 --> 00:01:20,370
however, inside this SVG
file we would see some things

26
00:01:20,370 --> 00:01:23,590
that we're familiar with like
the SVG or the group tag,

27
00:01:23,590 --> 00:01:26,840
but also some things that are
a little weird like this really

28
00:01:26,840 --> 00:01:28,480
long and scary path.

29
00:01:28,480 --> 00:01:29,590
What's going on here?

30
00:01:32,910 --> 00:01:37,020
Paths are very powerful
for creating complex SVGs.

31
00:01:37,020 --> 00:01:40,380
However, they're better suited
for creation by software

32
00:01:40,380 --> 00:01:42,530
than by humans.

33
00:01:42,530 --> 00:01:47,130
So we'll show you the basics
on what paths are doing.

34
00:01:47,130 --> 00:01:49,290
Don't worry about memorizing
it or needing to be

35
00:01:49,290 --> 00:01:50,800
able to do it by hand, however.

36
00:01:50,800 --> 00:01:52,890
This is just so that
you can go grok SVG

37
00:01:52,890 --> 00:01:55,640
code when you see it or you're
handed it by other developers.

38
00:01:59,240 --> 00:02:01,790
What would a triangle--
that polygon element

39
00:02:01,790 --> 00:02:04,940
that we used in our badge--
look like as a path?

40
00:02:04,940 --> 00:02:09,000
Well, here's the polygon
with the points as we drew it

41
00:02:09,000 --> 00:02:13,390
and a path of this polygon
would look like this.

42
00:02:13,390 --> 00:02:17,020
The M specifies, this
is the start of my path.

43
00:02:17,020 --> 00:02:21,100
The L is where the points are
specified that the path will

44
00:02:21,100 --> 00:02:23,230
connect to create a shape.

45
00:02:23,230 --> 00:02:26,910
And the Z is to signify
the end of the path.

46
00:02:26,910 --> 00:02:30,990
As you'll see, both polygons
look exactly the same.

47
00:02:30,990 --> 00:02:34,640
Using a path is just a
different way to draw it.

48
00:02:34,640 --> 00:02:37,140
M, L, and Z are
all path commands

49
00:02:37,140 --> 00:02:40,690
used to draw straight lines.

50
00:02:40,690 --> 00:02:44,320
You can draw not straight,
like curvy lines for instance,

51
00:02:44,320 --> 00:02:49,350
with things like C. C denotes
that we're using a cubic Bézier

52
00:02:49,350 --> 00:02:51,420
curve in our path.

53
00:02:51,420 --> 00:02:55,340
So as you can see here, we
still have in M, the move to,

54
00:02:55,340 --> 00:02:57,640
but we have a C now
that's going to give

55
00:02:57,640 --> 00:03:00,400
the x and y of the
first handle, the x

56
00:03:00,400 --> 00:03:02,670
and y of the second
handle, and the x

57
00:03:02,670 --> 00:03:04,230
and y of the second point.

58
00:03:08,680 --> 00:03:13,530
Anthony Dugois built an app
that's called SVG Path Builder.

59
00:03:13,530 --> 00:03:15,980
This app allows you to
play around with paths

60
00:03:15,980 --> 00:03:19,920
so as you move the paths, you
can see the coordinates change.

61
00:03:19,920 --> 00:03:22,940
It's really great to
wrap your head around all

62
00:03:22,940 --> 00:03:25,100
of these different
coordinates and how they

63
00:03:25,100 --> 00:03:26,590
change when your path changes.

64
00:03:26,590 --> 00:03:28,590
So definitely check it
out if you're interested.

65
00:03:33,990 --> 00:03:37,990
Similarly, the cubic Bézier, we
can create a quadratic Bézier

66
00:03:37,990 --> 00:03:40,575
using Q in the path.

67
00:03:40,575 --> 00:03:42,700
We're not going to get into
the nitty gritty of it.

68
00:03:42,700 --> 00:03:47,500
But this is what a Q
path would look like.

69
00:03:47,500 --> 00:03:50,320
There's also an
elliptical arc curve.

70
00:03:50,320 --> 00:03:55,370
This one has a leading A. This
is by far the most complicated

71
00:03:55,370 --> 00:03:56,870
path of them all.

72
00:03:56,870 --> 00:03:58,840
Don't worry, as we said before.

73
00:03:58,840 --> 00:04:01,450
You don't need to memorize
how to draw these paths out

74
00:04:01,450 --> 00:04:02,250
by hand.

75
00:04:02,250 --> 00:04:06,650
You just need to be able to
grok them for the future.

76
00:04:06,650 --> 00:04:09,250
Paths, just like any
other SVG element,

77
00:04:09,250 --> 00:04:11,660
can be styled or animated.

78
00:04:11,660 --> 00:04:15,700
You can add styles like fill,
stroke, stroke-width, inline

79
00:04:15,700 --> 00:04:20,680
or put them in a style sheet
and call that path element out.

80
00:04:20,680 --> 00:04:24,670
There's some other attributes
besides stroke and stroke-width

81
00:04:24,670 --> 00:04:27,070
that apply to a path.

82
00:04:27,070 --> 00:04:30,770
You have stroke-linecap,--
which is the shape of the end

83
00:04:30,770 --> 00:04:33,330
of the line--
stroke-dasharray,--

84
00:04:33,330 --> 00:04:37,060
which is the length of
dashes-- and stroke-dashoffset,

85
00:04:37,060 --> 00:04:40,600
which would be the space between
or how far offset the dashes

86
00:04:40,600 --> 00:04:42,780
are.

87
00:04:42,780 --> 00:04:45,410
Why don't you have fun
practicing with paths

88
00:04:45,410 --> 00:04:47,420
and understanding them
a little bit more.

89
00:04:47,420 --> 00:04:50,820
And I'll see you back in the
final section for You, Me,

90
00:04:50,820 --> 00:04:52,490
and SVG.

91
00:04:52,490 --> 00:04:53,522
.


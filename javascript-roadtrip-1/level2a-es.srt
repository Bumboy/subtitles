1
00:00:00,290 --> 00:00:00,580
[CANTANDO]

2
00:00:00,580 --> 00:00:03,890
Desde los laberintos del loop a
los valles de la variable,

3
00:00:03,890 --> 00:00:05,630
veremos los acantilados
de los valores primero.

4
00:00:05,630 --> 00:00:07,070
JavaScript esta justo
junto a tu calle.

5
00:00:07,070 --> 00:00:10,490
Acantilados hechos, cascada de archivos,
arrays archipiélagos.

6
00:00:10,490 --> 00:00:12,680
declaraciones en un desierto,
donde descubrirás

7
00:00:12,680 --> 00:00:13,670
cuan lejos irás.

8
00:00:13,670 --> 00:00:14,510
Aprende el programa.

9
00:00:14,510 --> 00:00:15,700
Da un paseo.

10
00:00:15,700 --> 00:00:16,440
Compra un boleto, entra.

11
00:00:16,440 --> 00:00:18,260
Todos a bordo, estás
en la estación para

12
00:00:18,260 --> 00:00:20,070
incrementar tu educación.

13
00:00:20,070 --> 00:00:22,510
Buen Viaje y nada desnudo! Siempre
y cuando no

14
00:00:22,510 --> 00:00:23,300
escatimes funciones en

15
00:00:23,300 --> 00:00:27,480
en este, JavaScript ... Road Trip.

16
00:00:34,220 --> 00:00:35,350
Cómo están, viajeros.

17
00:00:35,350 --> 00:00:36,530
Espero que hayan disfrutado el Nivel Uno.

18
00:00:36,530 --> 00:00:39,050
Y ahora saben como hacer
algunos datos, pero necesitamos saber

19
00:00:39,050 --> 00:00:39,990
dónde almacenarlos.

20
00:00:39,990 --> 00:00:42,100
Así que eso es lo que
haremos en el siguiente nivel.

21
00:00:42,100 --> 00:00:44,660
Aquí viene el Nivel Dos,
"Variable Valley".

22
00:00:45,000 --> 00:00:46,660
"Valle de las variables"

23
00:00:47,270 --> 00:00:51,580
JavaScript usa variables para
almacenar y manejar datos.

24
00:00:51,580 --> 00:00:55,260
Aquí puedes ver una sintaxis de
asignación básica para una

25
00:00:55,260 --> 00:00:58,020
variable llamada trainWhistles.

26
00:00:58,020 --> 00:01:00,810
Esa "var" es la palabra clave
de la variable.

27
00:01:00,810 --> 00:01:04,250
Es lo que dice al navegador que
haga un espacio aparte

28
00:01:04,250 --> 00:01:05,970
para la variable en sí.

29
00:01:05,970 --> 00:01:08,780
La siguiente cosa que ves es
el nombre de trainWhistles.

30
00:01:08,780 --> 00:01:10,980
Ese es el nombre
de la variable.

31
00:01:10,980 --> 00:01:13,600
El signo de igualdad es el
operador de asignación.

32
00:01:13,600 --> 00:01:16,240
Nótese que es un solo
signo de igualdad.

33
00:01:16,240 --> 00:01:18,340
Y finalmente, el valor 3.

34
00:01:18,340 --> 00:01:21,490
Ese es el valor que va a ser
almacenado dentro de nuestra

35
00:01:21,490 --> 00:01:22,740
variable trainWhistles.

36
00:01:25,690 --> 00:01:28,430
Ahora cuando llamamos a la variable
trainWhistles, nosotros

37
00:01:28,430 --> 00:01:30,915
automáticamente obtenemos un valor
de tres de retorno.

38
00:01:34,850 --> 00:01:37,950
Ahora, hay algunas reglas y
regulaciones que seguimos en

39
00:01:37,950 --> 00:01:40,670
JavaScript para nombrar
variables.

40
00:01:40,670 --> 00:01:43,760
La primera es que no podemos
tener ningún espacio en el

41
00:01:43,760 --> 00:01:45,390
nombre de la variable.

42
00:01:45,390 --> 00:01:47,850
El compilador te retornará un
error si tratas de poner

43
00:01:47,850 --> 00:01:50,730
espacios dentro del nombre de la variable.

44
00:01:50,730 --> 00:01:53,600
Lo siguiente es que no podemos
tener ningún dígito

45
00:01:53,600 --> 00:01:55,580
enfrente del nombre de nuestra variable.

46
00:01:55,580 --> 00:01:56,360
No nos gusta eso.

47
00:01:56,360 --> 00:01:58,850
Al compilador no
le gusta eso.

48
00:01:58,850 --> 00:02:00,840
Podemos usar guiones bajos,
aunque suelen ser

49
00:02:00,840 --> 00:02:01,700
irritantes.

50
00:02:01,700 --> 00:02:06,020
Podemos usar signos de dólar ($),
creo que... no.

51
00:02:06,020 --> 00:02:09,090
Incluso podríamos usar el signo de dólar
y guiones bajos juntos.

52
00:02:09,090 --> 00:02:12,950
Entonces, esto es ligeramente estúpido, pero
es técnicamente legal.

53
00:02:12,950 --> 00:02:15,190
Aquí tenemos un nombre
de variable genial.

54
00:02:15,190 --> 00:02:18,610
Nótese que al principio es una
letra en minúscula y cada

55
00:02:18,610 --> 00:02:21,400
palabra subsecuente es
capitalizada.

56
00:02:21,400 --> 00:02:24,890
Tal vez hayas escuchado esto referenciado
como Camel Case.

57
00:02:24,890 --> 00:02:27,130
Y luego este nombre de la variable
final usa un

58
00:02:27,130 --> 00:02:29,370
dígito en el final.

59
00:02:29,370 --> 00:02:30,620
Fatality.

60
00:02:33,660 --> 00:02:36,500
Qué pasaría si quisieramos cambiar
el contenido de una variable?

61
00:02:36,500 --> 00:02:37,100
Adivina qué?

62
00:02:37,100 --> 00:02:38,770
Es tu día de suerte.

63
00:02:38,770 --> 00:02:42,910
Actualmente nuestra variable
trainWhistles está puesta en 3.

64
00:02:42,910 --> 00:02:46,370
Pero si queremos cambiar nuestra
cantidad de trainWhistles, solo

65
00:02:46,370 --> 00:02:49,520
reutilizamos el operador
de asignación y lo asignamos

66
00:02:49,520 --> 00:02:51,630
igual a un nuevo valor.

67
00:02:51,630 --> 00:02:55,560
Nótese que nosotros no usamos la
palabra clave var porque la

68
00:02:55,560 --> 00:02:59,180
consola ya sabe que la
variable trainWhistles está

69
00:02:59,180 --> 00:03:01,350
dentro de la memoria.

70
00:03:01,350 --> 00:03:04,350
Ahora nuestro valor
trainWhistles es 9.

71
00:03:04,350 --> 00:03:08,130
Podemos usar también el
valor trainWhistles mismo para

72
00:03:08,130 --> 00:03:11,360
modificar los contenidos de la
variable trainWhistles.

73
00:03:11,360 --> 00:03:14,420
Aquí puedes ver que estamos
diciendo: Toma el valor

74
00:03:14,420 --> 00:03:18,670
de trainWhistles, añadele 3, y
guárdalo dentro de la

75
00:03:18,670 --> 00:03:21,040
variable trainWhistles.

76
00:03:21,040 --> 00:03:24,850
Ahora, porque el valor inicial del valor de
trainWhistles era 9, obtenemos

77
00:03:24,850 --> 00:03:27,630
9 más 3 guardado en trainWhistles,
que

78
00:03:27,630 --> 00:03:28,880
resulta en un 12.

79
00:03:32,100 --> 00:03:35,640
Otra forma de decir esa misma
expresión es con el

80
00:03:35,640 --> 00:03:38,500
operador de "más igualdad".

81
00:03:38,500 --> 00:03:40,910
Eso le indica a la consola
que tome la variable

82
00:03:40,910 --> 00:03:44,190
trainWhistles, y le añada 3, y
lo guarde dentro de la

83
00:03:44,190 --> 00:03:46,700
variable trainWhistles.

84
00:03:46,700 --> 00:03:48,510
Ahora tenemos en total 15
silbatos de tren.

85
00:03:52,370 --> 00:03:55,100
Todas las operaciones pueden
ser usadas con asignación

86
00:03:55,100 --> 00:03:55,910
de variables.

87
00:03:55,910 --> 00:03:58,560
Aquí podemos ver que la
variable trainWhistles está

88
00:03:58,560 --> 00:04:02,000
siendo multiplicada por 2 antes
de ser guardada dentro de la

89
00:04:02,000 --> 00:04:03,860
variable trainWhistles.

90
00:04:03,860 --> 00:04:06,430
Ahora tenemos 30 silbatos de tren (Train whistles)

91
00:04:06,430 --> 00:04:10,540
Y de nuevo, el operador "multiplicador-igual"
es el mismo que

92
00:04:10,540 --> 00:04:12,040
la expresión previa.

93
00:04:12,040 --> 00:04:14,700
Y obtenemos 60 silbatos de tren.

94
00:04:14,700 --> 00:04:16,829
Oh, 60 silbatos -

95
00:04:16,829 --> 00:04:18,079
Eso es mucho.

96
00:04:21,220 --> 00:04:24,780
Nombres de variables también pueden actuar como
substitutos para los datos que

97
00:04:24,780 --> 00:04:26,330
ellos señalan.

98
00:04:26,330 --> 00:04:29,430
Eso significa que yo puedo usar
variables dentro de

99
00:04:29,430 --> 00:04:32,720
concatenaciones con cadenas para
referirme a los datos que

100
00:04:32,720 --> 00:04:34,640
de hecho están dentro de la variable.

101
00:04:34,640 --> 00:04:38,000
Aquí puedes ver una concatenación
de "All of our

102
00:04:38,000 --> 00:04:41,410
trains have" con la variable
trainWhistles, y luego la

103
00:04:41,410 --> 00:04:43,010
la cadena "whistles".

104
00:04:43,010 --> 00:04:44,880
Qué pasa en la salida?

105
00:04:44,880 --> 00:04:47,460
"Todos nuestros trenes
tienen 3 silbatos!"

106
00:04:47,460 --> 00:04:50,970
El nombre de la variable desaparece y
en vez de eso, el dato que la

107
00:04:50,970 --> 00:04:54,450
variable contiene es colocada
dentro de la cadena.

108
00:04:54,450 --> 00:04:56,240
Adicionalmente, podemos colocar
variables dentro de

109
00:04:56,240 --> 00:04:59,610
expresiones que son
concatenadas con cadenas.

110
00:04:59,610 --> 00:05:01,850
En esta cadena, cuando
trainWhistles es multiplicada por

111
00:05:01,850 --> 00:05:03,450
3, obtenemos 9.

112
00:05:03,450 --> 00:05:05,540
Y en la cadena final
vemos, "But the

113
00:05:05,540 --> 00:05:09,260
Pollock 9000 has 9!"

114
00:05:09,260 --> 00:05:11,560
Pero espera, este código
apesta un poquito.

115
00:05:11,560 --> 00:05:14,780
Porque el Pollock 9000 necesita
su propia variable de silbatos (whistles).

116
00:05:14,780 --> 00:05:16,620
Hagamos eso.

117
00:05:16,620 --> 00:05:18,770
Todo lo que tenemos que hacer es declarar
una nueva variable.

118
00:05:18,770 --> 00:05:19,640
La llamaremos el pollock9000 -

119
00:05:20,640 --> 00:05:23,460
Y luego asignar esa
expresión que estábamos usando

120
00:05:23,460 --> 00:05:25,620
en la cadena a esta
nueva variable.

121
00:05:25,620 --> 00:05:28,230
Y ahora podemos ver que
el pollock9000

122
00:05:28,230 --> 00:05:29,690
tiene 9 silbatos de tren.

123
00:05:33,440 --> 00:05:36,420
Ahora que el pollock9000 tiene
su propia variable, podemos usar

124
00:05:36,420 --> 00:05:37,850
eso dentro de la cadena.

125
00:05:42,500 --> 00:05:44,860
Hay una forma simple de
incrementar o decrementar el

126
00:05:44,860 --> 00:05:47,720
valor de una variable en 1
en cualquier dirección.

127
00:05:47,720 --> 00:05:50,890
Esto se llama Incrementando
y Decrementando.

128
00:05:50,890 --> 00:05:54,130
Aquí en el lado izquierdo, puedes
ver que tenemos trainWhistles

129
00:05:54,130 --> 00:05:57,430
"más más", que es una simple
sintáxis para aumentar el

130
00:05:57,430 --> 00:05:59,660
valor de una variable en 1.

131
00:05:59,660 --> 00:06:02,030
Ahora puedes ver que
el valor trainWhistles es 4.

132
00:06:02,030 --> 00:06:05,180
Si quisiéramos decrementar la
variable en 1, habríamos

133
00:06:05,180 --> 00:06:08,390
usado una sintaxis "menos menos", que
hubiera producido un

134
00:06:08,390 --> 00:06:10,860
valor de 2 dentro
de la variable trainWhistles.

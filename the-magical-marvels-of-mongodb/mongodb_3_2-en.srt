1
00:00:02,050 --> 00:00:02,829
Welcome back.

2
00:00:02,829 --> 00:00:05,370
In this section, we'll learn
how we can customize our queries

3
00:00:05,370 --> 00:00:07,727
even more.

4
00:00:07,727 --> 00:00:09,810
We're putting together a
blog post of all the best

5
00:00:09,810 --> 00:00:11,360
potions we've ever used.

6
00:00:11,360 --> 00:00:13,040
Let's put together
a query to find

7
00:00:13,040 --> 00:00:15,884
all potions that have a grade
greater than or equal to 80.

8
00:00:15,884 --> 00:00:18,050
But we're only going to
need the name and the vendor

9
00:00:18,050 --> 00:00:18,799
for these potions.

10
00:00:21,220 --> 00:00:23,240
First, we're going to
find potions with a grade

11
00:00:23,240 --> 00:00:25,320
greater than or equal to 80.

12
00:00:25,320 --> 00:00:27,280
Now this is going to
return all the fields,

13
00:00:27,280 --> 00:00:30,350
but we only want the
name and the vendor.

14
00:00:30,350 --> 00:00:34,540
To do this, we can add a second
parameter called projections.

15
00:00:34,540 --> 00:00:37,980
By specifying the fields we want
returned and setting the true,

16
00:00:37,980 --> 00:00:40,120
we can build custom results.

17
00:00:40,120 --> 00:00:42,720
For instance, by setting
vendor and name to true,

18
00:00:42,720 --> 00:00:46,060
we're only going to be
returned the ID, the name,

19
00:00:46,060 --> 00:00:49,010
and the vendor for each
potion that matches the query.

20
00:00:49,010 --> 00:00:51,830
By default, document
IDs are always returned.

21
00:00:51,830 --> 00:00:54,450
It's best practice to only
retrieve the data that we need.

22
00:00:57,620 --> 00:01:00,030
With projections, we either
select the fields we want,

23
00:01:00,030 --> 00:01:02,186
or we exclude the
fields we don't want.

24
00:01:02,186 --> 00:01:04,060
In this case, if we
wanted to pull everything

25
00:01:04,060 --> 00:01:08,060
but the vendor and the price,
we'd set their fields to false.

26
00:01:08,060 --> 00:01:10,457
This is great when we want
to remove sensitive data

27
00:01:10,457 --> 00:01:11,165
from our results.

28
00:01:15,190 --> 00:01:18,610
So far we've seen the ID
field returned every time,

29
00:01:18,610 --> 00:01:20,410
but sometimes we
may not want that ID

30
00:01:20,410 --> 00:01:22,840
field, especially when
we're sending results

31
00:01:22,840 --> 00:01:24,630
to non-developers.

32
00:01:24,630 --> 00:01:28,080
In order to remove the ID, we
can specify the underscore ID

33
00:01:28,080 --> 00:01:29,480
and set it to false.

34
00:01:29,480 --> 00:01:32,114
This is the only time you can
have a true and false value

35
00:01:32,114 --> 00:01:32,780
in a projection.

36
00:01:36,090 --> 00:01:39,540
Let's see what would happen if
we try to select and exclude

37
00:01:39,540 --> 00:01:41,340
in the same projection.

38
00:01:41,340 --> 00:01:43,650
What happens is we raise an
error that says projection

39
00:01:43,650 --> 00:01:47,090
cannot have a mix of
inclusion and exclusion.

40
00:01:47,090 --> 00:01:48,890
And that's because we
only want to select

41
00:01:48,890 --> 00:01:50,950
all the fields we want
or exclude the fields

42
00:01:50,950 --> 00:01:53,960
we don't need.

43
00:01:53,960 --> 00:01:55,690
Time to amp up our
marketing campaign.

44
00:01:55,690 --> 00:01:58,660
We want to establish our sales
as the go-to place for potion

45
00:01:58,660 --> 00:02:01,190
reviews by listing the
number of potion reviews

46
00:02:01,190 --> 00:02:02,924
we have on the top of our site.

47
00:02:02,924 --> 00:02:04,340
To do this, we
need a way to count

48
00:02:04,340 --> 00:02:08,660
the number of potion reviews
we have in our database.

49
00:02:08,660 --> 00:02:10,789
It turns out that whenever
we run the find method,

50
00:02:10,789 --> 00:02:13,060
we're actually returning
a cursor that's pointing

51
00:02:13,060 --> 00:02:14,890
to the documents that match.

52
00:02:14,890 --> 00:02:17,330
By default, the cursor
will print out the first 20

53
00:02:17,330 --> 00:02:19,075
documents right in our shell.

54
00:02:19,075 --> 00:02:20,700
Let's take a look at
what happens if we

55
00:02:20,700 --> 00:02:21,866
have more than 20 documents.

56
00:02:25,040 --> 00:02:27,710
We've populated our
database with 80 documents.

57
00:02:27,710 --> 00:02:30,780
When we run the find
method, we'll match all 80.

58
00:02:30,780 --> 00:02:33,560
But we'll only get the first
20 documents sent back.

59
00:02:33,560 --> 00:02:36,130
But this time, we'll have
a response that says type

60
00:02:36,130 --> 00:02:37,060
it for more.

61
00:02:39,650 --> 00:02:41,460
Here we'll literally
type it, which

62
00:02:41,460 --> 00:02:44,710
will move the cursor to the next
20 documents, send them to us,

63
00:02:44,710 --> 00:02:47,276
and then prompt us again
until the cycle is complete

64
00:02:47,276 --> 00:02:49,150
and we've iterated
through all of the cursor.

65
00:02:52,620 --> 00:02:55,160
So now that we know that
find returns a cursor object,

66
00:02:55,160 --> 00:02:57,610
this means that we can call
methods on that cursor object,

67
00:02:57,610 --> 00:03:00,030
like count, which will count
the number of documents

68
00:03:00,030 --> 00:03:02,890
in a cursor, which
in this case is 80.

69
00:03:02,890 --> 00:03:04,990
Now remember, cursor
methods will always

70
00:03:04,990 --> 00:03:07,710
come after find since find is
returning the cursor object.

71
00:03:10,430 --> 00:03:13,060
So what other cursor
methods can we use?

72
00:03:13,060 --> 00:03:16,340
Well, we want to allow users
to sort potions by their price.

73
00:03:16,340 --> 00:03:20,290
To do this, we can use
the sort cursor method.

74
00:03:20,290 --> 00:03:22,190
First, we'll find
all the documents.

75
00:03:22,190 --> 00:03:23,980
Then we'll add the
sort cursor method

76
00:03:23,980 --> 00:03:26,510
with the field we want to
sort by, which in this case

77
00:03:26,510 --> 00:03:27,780
is price.

78
00:03:27,780 --> 00:03:29,800
Next, we can either
add the value of one

79
00:03:29,800 --> 00:03:32,830
for ascending or minus
one for descending.

80
00:03:32,830 --> 00:03:37,270
We'll add the value 1 to sort
our potions by price ascending.

81
00:03:37,270 --> 00:03:39,400
Now we can see our
potions arranged in order

82
00:03:39,400 --> 00:03:45,390
with the prices ascending
from $3.99 to $59.99.

83
00:03:45,390 --> 00:03:47,880
We've decided to add
pagination to our site

84
00:03:47,880 --> 00:03:50,450
so that instead of having
an endless scrolling page,

85
00:03:50,450 --> 00:03:52,730
we can have three
potions per page.

86
00:03:52,730 --> 00:03:55,765
To do this, we can use the
skip and limit cursor methods.

87
00:03:58,324 --> 00:04:00,240
Here are the potions
that we want to paginate.

88
00:04:00,240 --> 00:04:01,970
All we need to do here
for the first page

89
00:04:01,970 --> 00:04:04,510
is limit our results to three
by using the limit cursor

90
00:04:04,510 --> 00:04:06,210
method with the value of 3.

91
00:04:09,940 --> 00:04:11,770
For the second page,
we need to add a skip

92
00:04:11,770 --> 00:04:14,660
to skip over the potions we've
returned on the first page.

93
00:04:14,660 --> 00:04:17,510
To do this, we'll add the
skip with the value of 3.

94
00:04:17,510 --> 00:04:19,495
And then we'll add a
limit, again, by 3.

95
00:04:22,160 --> 00:04:26,290
The last page will skip by
6 but still limit by 3.

96
00:04:26,290 --> 00:04:29,390
This approach technically works
but can become quite costly

97
00:04:29,390 --> 00:04:30,610
for large collections.

98
00:04:30,610 --> 00:04:31,679
So keep that in mind.

99
00:04:31,679 --> 00:04:34,220
But for now, it's time for you
to head over to the challenges

100
00:04:34,220 --> 00:04:37,104
and try out some the projections
and cursors on your own.

101
00:04:37,104 --> 00:04:37,980
[BEEPING]

102
00:04:37,980 --> 00:04:40,914
Fields we don't want, want.

103
00:04:40,914 --> 00:04:41,741
Ha,ha,ha.

104
00:04:41,741 --> 00:04:42,240
[BEEPING]

105
00:04:42,240 --> 00:04:43,620
Either select the
fields we want.

106
00:04:43,620 --> 00:04:45,250
[LAUGHTER]

107
00:04:45,250 --> 00:04:45,750
[BEEPING]

108
00:04:45,750 --> 00:04:46,250
Want it.

109
00:04:46,250 --> 00:04:47,220
I really want it.

110
00:04:47,220 --> 00:04:47,720
[BEEPING]

111
00:04:47,720 --> 00:04:48,970
The fields we want.

112
00:04:48,970 --> 00:04:51,870
[LAUGHTER]

113
00:04:51,870 --> 00:04:53,420
[BEEPING]


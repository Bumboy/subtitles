1
00:00:00,732 --> 00:00:03,320
[SINGING] Starting back
in the machine age,

2
00:00:03,320 --> 00:00:05,830
the telephone had
just taken the stage.

3
00:00:05,830 --> 00:00:08,039
No one predicted
it's acceleration,

4
00:00:08,039 --> 00:00:10,410
evolving all of
our communication.

5
00:00:10,410 --> 00:00:14,180
Today we build with
storyboard, use Xcode projects

6
00:00:14,180 --> 00:00:15,140
where they're stored.

7
00:00:15,140 --> 00:00:18,400
Controllers with scroll
navigating, tables, outlets,

8
00:00:18,400 --> 00:00:20,020
actions, buttons, and labels.

9
00:00:20,020 --> 00:00:23,420
To code a phone is a learned
gift with the App Evolution

10
00:00:23,420 --> 00:00:24,130
with Swift.

11
00:00:28,000 --> 00:00:30,580
Welcome back to App
Evolution with Swift.

12
00:00:30,580 --> 00:00:32,959
Our product view controller
is in a really good place,

13
00:00:32,959 --> 00:00:35,500
so we're going to switch gears
and work on a different screen

14
00:00:35,500 --> 00:00:36,810
for our contact view.

15
00:00:39,570 --> 00:00:41,920
Now, that contact view is
going to contain more content

16
00:00:41,920 --> 00:00:44,050
than can fit on the device.

17
00:00:44,050 --> 00:00:46,110
So we're going to add
a scroll view that

18
00:00:46,110 --> 00:00:49,310
allows for stretching beyond
the bottom of the device screen,

19
00:00:49,310 --> 00:00:50,650
and scrolling up and down.

20
00:00:54,100 --> 00:00:56,060
Scroll views look a
lot like a normal view

21
00:00:56,060 --> 00:00:57,640
except for one thing.

22
00:00:57,640 --> 00:00:59,490
If you have subviews
that are outside

23
00:00:59,490 --> 00:01:01,760
of the visible
screen on the device,

24
00:01:01,760 --> 00:01:04,480
you can scroll up and
down, left and right,

25
00:01:04,480 --> 00:01:08,750
or both to see all
of the content.

26
00:01:08,750 --> 00:01:12,360
Now, the scroll view is still
a subview of the main view,

27
00:01:12,360 --> 00:01:14,500
but all of the rest of
the subviews on the screen

28
00:01:14,500 --> 00:01:16,970
go inside of the scroll view.

29
00:01:16,970 --> 00:01:19,700
So let's jump into Xcode,
and create our contact screen

30
00:01:19,700 --> 00:01:22,840
in a scroll view.

31
00:01:22,840 --> 00:01:24,659
To get started creating
our scroll view,

32
00:01:24,659 --> 00:01:26,950
we're going to create a brand
new view controller scene

33
00:01:26,950 --> 00:01:28,158
called contact view controller.

34
00:01:30,310 --> 00:01:34,806
We'll search for a view
controller in the object panel.

35
00:01:34,806 --> 00:01:36,930
And slide our storyboard
to the right a little bit,

36
00:01:36,930 --> 00:01:40,120
so we've got some
more empty room.

37
00:01:40,120 --> 00:01:42,470
Then we'll click and drag on
the view controller object,

38
00:01:42,470 --> 00:01:46,030
and place it on the
storyboard editor.

39
00:01:46,030 --> 00:01:48,100
We've also got the
assistant editor still open,

40
00:01:48,100 --> 00:01:50,980
so let's turn that off by
clicking on the first icon

41
00:01:50,980 --> 00:01:54,052
to turn the standard
editor back on.

42
00:01:54,052 --> 00:01:55,885
Now we've got a full
view of the storyboard.

43
00:01:59,470 --> 00:02:01,270
We'll go back into
the attributes panel,

44
00:02:01,270 --> 00:02:03,507
and set the size to
4.7, so that it matches

45
00:02:03,507 --> 00:02:04,590
the product view controller.

46
00:02:09,255 --> 00:02:11,130
Let's also go ahead and
create the Swift file

47
00:02:11,130 --> 00:02:13,350
for this view controller too.

48
00:02:13,350 --> 00:02:15,450
We'll click on the
project folder,

49
00:02:15,450 --> 00:02:17,470
then right click
and choose New File.

50
00:02:24,050 --> 00:02:27,010
Then Cocoa Touch Class from
the iOS Source section,

51
00:02:27,010 --> 00:02:29,789
and click Next.

52
00:02:29,789 --> 00:02:31,330
For the name of this
view controller,

53
00:02:31,330 --> 00:02:34,040
we'll call it the
Contact View Controller.

54
00:02:34,040 --> 00:02:36,409
Make sure it's a
UI View Controller,

55
00:02:36,409 --> 00:02:37,700
and that the language is Swift.

56
00:02:41,824 --> 00:02:43,990
And we'll save it in our
project folder like before.

57
00:02:47,170 --> 00:02:50,150
And also like before, we'll
delete all that boilerplate

58
00:02:50,150 --> 00:02:52,450
code, except for the
view Did Load function.

59
00:02:56,052 --> 00:02:58,510
Back in the storyboard, we'll
click on the view controller.

60
00:03:01,350 --> 00:03:03,975
Open up the class page
of the inspector panel,

61
00:03:03,975 --> 00:03:05,725
and set the name to
Contact View Controller.

62
00:03:09,030 --> 00:03:10,810
Now let's go back
into the object panel

63
00:03:10,810 --> 00:03:14,919
and search for scroll
view, and drag it

64
00:03:14,919 --> 00:03:15,960
into the view controller.

65
00:03:18,820 --> 00:03:21,340
We'll make this view full
screen by grabbing the anchors

66
00:03:21,340 --> 00:03:23,070
and adjusting the
width and height,

67
00:03:23,070 --> 00:03:24,710
so that it takes
up the entire width

68
00:03:24,710 --> 00:03:26,560
and height of the main view.

69
00:03:26,560 --> 00:03:29,460
Now we're ready to start loading
content into the scroll view.

70
00:03:29,460 --> 00:03:31,330
First, let's head over
to the asset catalog,

71
00:03:31,330 --> 00:03:35,160
and add some new images that
we'll use on this screen.

72
00:03:35,160 --> 00:03:37,460
In the asset catalog,
we click the + button

73
00:03:37,460 --> 00:03:41,470
at the bottom of the
panel, choose Import.

74
00:03:41,470 --> 00:03:43,820
And on our desktop, in
our image files folder,

75
00:03:43,820 --> 00:03:46,030
we've added a few more images.

76
00:03:46,030 --> 00:03:48,510
One for the header,
and three icons

77
00:03:48,510 --> 00:03:50,280
we can use in the
context section.

78
00:03:55,000 --> 00:03:57,250
Back in our storyboard
let's look for an image view

79
00:03:57,250 --> 00:03:58,330
in the object panel.

80
00:04:05,170 --> 00:04:09,540
And we'll drag that to
inside of the scroll view.

81
00:04:09,540 --> 00:04:12,480
Set the image for that image
view in the Attributes panel,

82
00:04:12,480 --> 00:04:16,370
choosing the image
header contact.

83
00:04:16,370 --> 00:04:18,220
Then we'll click inside
of the image view,

84
00:04:18,220 --> 00:04:20,610
so the image is selected.

85
00:04:20,610 --> 00:04:23,095
And choose Editor,
Size to Fit Content.

86
00:04:26,570 --> 00:04:29,080
Click out of the image,
and click and drag

87
00:04:29,080 --> 00:04:31,465
the image view into place
at the top of the screen.

88
00:04:35,330 --> 00:04:37,840
Now let's grab a label and
drag it onto the scroll view,

89
00:04:37,840 --> 00:04:39,545
and expand the
width to both edges.

90
00:04:48,500 --> 00:04:54,770
We'll center the text, change
the font from System to Custom.

91
00:04:57,980 --> 00:05:07,610
And use Damascus again,
setting the style to bold,

92
00:05:07,610 --> 00:05:08,585
and the size to 24.

93
00:05:12,580 --> 00:05:16,194
We'll also set the text to ABOUT
US, in all capital letters.

94
00:05:16,194 --> 00:05:18,110
And then we'll adjust
the height of the label,

95
00:05:18,110 --> 00:05:19,660
so we can see all of the text.

96
00:05:24,650 --> 00:05:26,300
Now let's drag in another label.

97
00:05:26,300 --> 00:05:28,539
But this label we're not
going to make full width,

98
00:05:28,539 --> 00:05:30,455
we're going to leave
some space on both sides.

99
00:05:36,350 --> 00:05:41,150
And we'll set the alignment
to Justify instead of Center.

100
00:05:41,150 --> 00:05:43,000
Our copywriter has
given us some text

101
00:05:43,000 --> 00:05:46,290
that we can input into our
app for the About Us page.

102
00:05:46,290 --> 00:05:48,200
So let's grab the
first line and copy it

103
00:05:48,200 --> 00:05:51,180
with Command-C,
and back in Xcode,

104
00:05:51,180 --> 00:05:54,615
paste it with Command-V into
the label's text attribute.

105
00:05:57,524 --> 00:05:58,940
You can see that
the storyboard is

106
00:05:58,940 --> 00:06:01,890
trying to fit all of
that text onto one line.

107
00:06:01,890 --> 00:06:04,420
Even if we increase the
height of that label box,

108
00:06:04,420 --> 00:06:07,370
it's still going to
fit all on one line.

109
00:06:07,370 --> 00:06:10,100
Strangely enough, the way
you support multiple lines

110
00:06:10,100 --> 00:06:12,880
on a label is to set the
number of lines to zero.

111
00:06:16,310 --> 00:06:19,400
If we flip the number of
lines from one to zero,

112
00:06:19,400 --> 00:06:23,502
now all of the text fits
across multiple lines.

113
00:06:23,502 --> 00:06:25,460
We can tighten up the
label's width and height,

114
00:06:25,460 --> 00:06:28,810
so it's not using any
more space than is needed.

115
00:06:28,810 --> 00:06:31,340
For this font, instead
of using the system font,

116
00:06:31,340 --> 00:06:33,490
we'll change it to Custom.

117
00:06:33,490 --> 00:06:38,510
Use Iowan Old Style, with the
Roman style for the family.

118
00:06:38,510 --> 00:06:41,510
And we'll drop it
down to 16 points,

119
00:06:41,510 --> 00:06:43,900
and readjust the anchor
so the text fits nicely.

120
00:06:46,650 --> 00:06:48,150
Rather than create
a brand new label

121
00:06:48,150 --> 00:06:49,900
for the next block
of text, let's

122
00:06:49,900 --> 00:06:52,330
just duplicate the one we have
since all of the attributes

123
00:06:52,330 --> 00:06:54,180
will be the same.

124
00:06:54,180 --> 00:06:57,049
We can click on the
label, and hit Command-D,

125
00:06:57,049 --> 00:06:59,090
and that will create a
duplicate that we can just

126
00:06:59,090 --> 00:07:01,436
move below the first label.

127
00:07:01,436 --> 00:07:03,060
You can see that the
storyboard is even

128
00:07:03,060 --> 00:07:05,720
drawing some of those blue
anchor lines on the screen

129
00:07:05,720 --> 00:07:08,850
to show how
everything is aligned.

130
00:07:08,850 --> 00:07:11,830
We'll go back over to
our copywriter text,

131
00:07:11,830 --> 00:07:17,790
copy the second line with
Command-C. Go back into Xcode,

132
00:07:17,790 --> 00:07:20,800
select the text in
the attributes panel.

133
00:07:20,800 --> 00:07:26,440
Hit Command-V to paste it
in, and then hit Return.

134
00:07:26,440 --> 00:07:28,890
For the last label
we'll do the same thing.

135
00:07:28,890 --> 00:07:32,850
Click on the label,
hit Command-D,

136
00:07:32,850 --> 00:07:35,160
line it up into place.

137
00:07:35,160 --> 00:07:40,080
Go back into the About
Us Copy, select the text,

138
00:07:40,080 --> 00:07:42,990
hit Command-C to copy.

139
00:07:42,990 --> 00:07:46,720
Back in Xcode highlight
the label text,

140
00:07:46,720 --> 00:07:51,010
hit Command-V to
paste, and hit Return.

141
00:07:51,010 --> 00:07:54,240
Since this text is only one line
we can bump the number of lines

142
00:07:54,240 --> 00:07:56,120
back up to one.

143
00:07:56,120 --> 00:07:58,670
We'll also change the font
properties from Roman style

144
00:07:58,670 --> 00:08:04,010
to Italic, and drop
the size down to 14.

145
00:08:08,237 --> 00:08:10,070
Then we'll scroll the
storyboard down a bit,

146
00:08:10,070 --> 00:08:11,860
and drag the bottom
label anchor up,

147
00:08:11,860 --> 00:08:13,570
so it's not taking
up too much space.

148
00:08:17,534 --> 00:08:19,700
Let's even make the bottom
label a little bit closer

149
00:08:19,700 --> 00:08:22,630
to the middle label.

150
00:08:22,630 --> 00:08:27,130
Now let's duplicate the About Us
header, and drag it down here.

151
00:08:30,280 --> 00:08:32,844
And change the text to
say CONTACT, in full caps.

152
00:08:36,510 --> 00:08:39,580
If we want to add some icons
to this contact section,

153
00:08:39,580 --> 00:08:42,400
we can start by searching
for an image view object,

154
00:08:42,400 --> 00:08:45,390
and drag it onto
the scroll view.

155
00:08:45,390 --> 00:08:47,890
We'll set the image for that
image view to icon-about-email.

156
00:08:53,180 --> 00:08:55,880
We'll select the image,
like we've done before,

157
00:08:55,880 --> 00:08:57,880
and choose Editor,
Size to Fit Content.

158
00:09:01,424 --> 00:09:02,840
Then we'll click
out of the image,

159
00:09:02,840 --> 00:09:04,673
so we can pick it up
and drag it into place.

160
00:09:09,580 --> 00:09:17,150
We can drag another
label in, setting it

161
00:09:17,150 --> 00:09:19,750
to a custom font using
Iowan Old Style text.

162
00:09:25,150 --> 00:09:32,309
Drop the text size down to 13,
and for the text we'll write

163
00:09:32,309 --> 00:09:33,350
good-as-old@example.com .

164
00:09:38,890 --> 00:09:43,480
We can stretch out the email
address label so it all fits.

165
00:09:43,480 --> 00:09:45,810
And now we have a
little bit of a problem.

166
00:09:45,810 --> 00:09:48,550
We want to be able to add
two more images, and two more

167
00:09:48,550 --> 00:09:51,610
labels for the phone number
and website for our store,

168
00:09:51,610 --> 00:09:54,390
but we don't have any more
room in our scroll view.

169
00:09:54,390 --> 00:09:56,660
We've reached the
very bottom of it.

170
00:09:56,660 --> 00:09:58,840
We could try to make
the scroll view taller,

171
00:09:58,840 --> 00:10:00,736
but the main view isn't
going to get taller.

172
00:10:00,736 --> 00:10:02,610
So we still wouldn't be
able to drag and drop

173
00:10:02,610 --> 00:10:04,790
more stuff in the storyboard.

174
00:10:04,790 --> 00:10:06,881
One way to fix this
is a little weird.

175
00:10:06,881 --> 00:10:09,130
We can take the scroll view
object, which is currently

176
00:10:09,130 --> 00:10:12,600
a subview of the main view, and
we can click and drag it out

177
00:10:12,600 --> 00:10:14,410
of the view
controller hierarchy,

178
00:10:14,410 --> 00:10:17,590
and down below, so that it's
still part of the contact view

179
00:10:17,590 --> 00:10:20,560
controller scene, but it's
not part of the contact view

180
00:10:20,560 --> 00:10:21,850
controller main view.

181
00:10:25,330 --> 00:10:27,250
As you can see, the
contact view controller

182
00:10:27,250 --> 00:10:30,900
is still in the
storyboard editor,

183
00:10:30,900 --> 00:10:33,970
but up above there's a new
associated view that looks just

184
00:10:33,970 --> 00:10:35,910
like our scroll view.

185
00:10:35,910 --> 00:10:37,885
We can't even pick this
up and move it around,

186
00:10:37,885 --> 00:10:40,780
it's, sort of, locked into
place above the contact view

187
00:10:40,780 --> 00:10:41,710
controller.

188
00:10:41,710 --> 00:10:44,640
What that enables us to do
is click on the scroll view,

189
00:10:44,640 --> 00:10:47,450
and go into the Inspector
panel's fifth page, which

190
00:10:47,450 --> 00:10:50,450
is the size inspector.

191
00:10:50,450 --> 00:10:53,600
Let's scroll down to the bottom
so we can see this changing.

192
00:10:53,600 --> 00:10:55,090
As we click on
the Height button,

193
00:10:55,090 --> 00:10:58,040
we can see the height
getting bigger and bigger.

194
00:10:58,040 --> 00:10:59,730
If we hold the
button down we keep

195
00:10:59,730 --> 00:11:01,960
increasing the height
of the scroll view,

196
00:11:01,960 --> 00:11:03,855
or we can just key in
the value that we want.

197
00:11:08,670 --> 00:11:11,410
It seems like 800 is going
to give us enough space

198
00:11:11,410 --> 00:11:13,680
to put all of our content.

199
00:11:13,680 --> 00:11:16,580
Now we'll go duplicate the icon
in the contact section three

200
00:11:16,580 --> 00:11:23,270
times, and duplicate
the label three times.

201
00:11:29,360 --> 00:11:31,710
And then change the images
for the two new icons

202
00:11:31,710 --> 00:11:40,732
back in the Attributes
panel to icon-about-phone,

203
00:11:40,732 --> 00:11:41,690
and icon-about-website.

204
00:11:46,000 --> 00:11:48,260
We'll also change our label
text for both the phone

205
00:11:48,260 --> 00:11:53,510
number, and website.

206
00:12:09,850 --> 00:12:12,524
And we can even select and move
all of those labels and images,

207
00:12:12,524 --> 00:12:14,690
so that it looks a little
more centered than before.

208
00:12:17,490 --> 00:12:20,760
Now what we need to do is, still
with our scroll view selected,

209
00:12:20,760 --> 00:12:22,850
go back into the size
inspector, and change it

210
00:12:22,850 --> 00:12:24,850
to what it was before.

211
00:12:24,850 --> 00:12:30,160
The main view height for
an iPhone 6s is 667 points,

212
00:12:30,160 --> 00:12:31,480
so we can enter that.

213
00:12:31,480 --> 00:12:33,890
And now it looks like our
content is gone, but it's not,

214
00:12:33,890 --> 00:12:37,110
it's just, sort of,
hiding below the scroll.

215
00:12:37,110 --> 00:12:39,110
Next, we can create
a scroll view outlet

216
00:12:39,110 --> 00:12:41,160
to the contact view controller.

217
00:12:41,160 --> 00:12:45,580
So we'll select our contact
view controller object,

218
00:12:45,580 --> 00:12:48,770
turn the assistant
editor back on.

219
00:12:48,770 --> 00:12:51,490
And then Control-Click and
drag from the scroll view

220
00:12:51,490 --> 00:12:53,900
down to the
ContactViewController code,

221
00:12:53,900 --> 00:12:55,800
and let go.

222
00:12:55,800 --> 00:12:59,840
We'll call this
outlet scroll View,

223
00:12:59,840 --> 00:13:04,230
and we'll actually change the
storage from Strong to Weak.

224
00:13:04,230 --> 00:13:05,740
Every time we have
a subview that's

225
00:13:05,740 --> 00:13:08,790
going to be attached to
a controller's main view,

226
00:13:08,790 --> 00:13:11,160
we can mark that
subview as a Weak.

227
00:13:11,160 --> 00:13:12,900
Then we hit Connect,
and now we have

228
00:13:12,900 --> 00:13:15,715
an outlet to our scroll view
that's in our contact view

229
00:13:15,715 --> 00:13:17,490
controller scene.

230
00:13:17,490 --> 00:13:18,710
One last step.

231
00:13:18,710 --> 00:13:21,430
We'll click on the contact view
controller in the storyboard,

232
00:13:21,430 --> 00:13:23,580
and click Is Initial
View Controller,

233
00:13:23,580 --> 00:13:25,350
so that this view is
the one that displays

234
00:13:25,350 --> 00:13:27,876
when we build and run the app.

235
00:13:27,876 --> 00:13:30,500
Now let's see how we can connect
the scroll view to the contact

236
00:13:30,500 --> 00:13:34,530
view controller with
code, back in the slides.

237
00:13:34,530 --> 00:13:37,060
Our scroll view and subviews
are all set up properly,

238
00:13:37,060 --> 00:13:38,750
but we've got another problem.

239
00:13:38,750 --> 00:13:40,420
Our scroll view
isn't showing up when

240
00:13:40,420 --> 00:13:43,390
we build and run our app
because the scroll view is not

241
00:13:43,390 --> 00:13:45,240
a subview of the main view.

242
00:13:48,210 --> 00:13:51,080
Since we have an outlet to the
scroll view in the storyboard,

243
00:13:51,080 --> 00:13:55,210
we can fix that pretty easily
by typing view.addSubview,

244
00:13:55,210 --> 00:13:57,270
and passing it that
scrollView variable

245
00:13:57,270 --> 00:13:59,400
between the parentheses.

246
00:13:59,400 --> 00:14:02,560
This attaches the scroll view
to the main view hierarchy,

247
00:14:02,560 --> 00:14:04,410
and thus the scroll
view and everything else

248
00:14:04,410 --> 00:14:07,700
that's in it can now be seen.

249
00:14:07,700 --> 00:14:11,430
And there it is, but wait,
we're still not scrolling.

250
00:14:11,430 --> 00:14:14,480
Well, that's because we've
set the scroll view's frame,

251
00:14:14,480 --> 00:14:16,420
but not the content size.

252
00:14:16,420 --> 00:14:18,560
So the scroll view doesn't
know how much content

253
00:14:18,560 --> 00:14:21,140
it should try to display.

254
00:14:21,140 --> 00:14:24,010
We need to explicitly tell
the scroll view how wide,

255
00:14:24,010 --> 00:14:27,920
and how high the content
is that's inside of it.

256
00:14:27,920 --> 00:14:30,470
The place to do this is another
view controller function

257
00:14:30,470 --> 00:14:35,100
that runs after viewDidLoad,
called viewWillLayoutSubviews.

258
00:14:35,100 --> 00:14:37,850
Anytime you're changing the
size of a subview with code,

259
00:14:37,850 --> 00:14:40,850
you should do it
in this function.

260
00:14:40,850 --> 00:14:43,410
Inside of that function, we'll
set the scroll view's content

261
00:14:43,410 --> 00:14:48,070
size equal to the output of
a function called CGSizeMake.

262
00:14:48,070 --> 00:14:51,710
CGSizeMake creates
a CGsize struct,

263
00:14:51,710 --> 00:14:53,600
and that's what the
content size property

264
00:14:53,600 --> 00:14:55,030
is expecting to receive.

265
00:14:55,030 --> 00:14:57,190
So it all works out.

266
00:14:57,190 --> 00:14:59,810
The content size needs to be
bigger than the frame, which

267
00:14:59,810 --> 00:15:03,240
was 667 for the iPhone 6s.

268
00:15:03,240 --> 00:15:05,640
We used 800 before when
we were laying things out

269
00:15:05,640 --> 00:15:07,750
on the storyboard, so
we'll use that again here.

270
00:15:12,047 --> 00:15:14,380
And now you can see we've got
a working scroll view that

271
00:15:14,380 --> 00:15:16,420
displays all of our
content, and allows

272
00:15:16,420 --> 00:15:18,590
us to scroll up and
down to see things that

273
00:15:18,590 --> 00:15:21,097
don't fit on the device screen.

274
00:15:21,097 --> 00:15:23,680
Now it's time for you to create
a scroll view in your project,

275
00:15:23,680 --> 00:15:24,730
and take some challenges.

276
00:15:24,730 --> 00:15:27,050
And I'll see you
in the next level.


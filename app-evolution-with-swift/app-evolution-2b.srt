1
00:00:02,630 --> 00:00:03,570
Welcome back.

2
00:00:03,570 --> 00:00:05,580
In this section, we're
going to wire up a button

3
00:00:05,580 --> 00:00:10,220
to trigger a function
in our Swift file,

4
00:00:10,220 --> 00:00:12,890
and the function is going to
print a message to the console

5
00:00:12,890 --> 00:00:14,560
every time that
we tap the button.

6
00:00:19,330 --> 00:00:21,790
To do this, we'll create
a storyboard action

7
00:00:21,790 --> 00:00:24,960
which sends interaction
information from a view back

8
00:00:24,960 --> 00:00:25,920
to a view controller.

9
00:00:28,500 --> 00:00:30,600
Outlets meant that we can
have a controller change

10
00:00:30,600 --> 00:00:32,920
the data that's
displayed, but actions

11
00:00:32,920 --> 00:00:34,710
mean that we can
have a user event run

12
00:00:34,710 --> 00:00:37,520
some code in the controller.

13
00:00:37,520 --> 00:00:40,120
Let's jump back into
Xcode to set this action up.

14
00:00:42,700 --> 00:00:45,195
Creating an action is a lot
like creating an outlet.

15
00:00:45,195 --> 00:00:46,570
We'll click on
the object that we

16
00:00:46,570 --> 00:00:48,740
want to receive the
action and control click

17
00:00:48,740 --> 00:00:52,010
and drag down to the Swift file.

18
00:00:52,010 --> 00:00:55,170
But instead of putting this
new code up top by the outlets,

19
00:00:55,170 --> 00:00:57,910
we'll go to the very last
line before the closing curly

20
00:00:57,910 --> 00:01:00,400
bracket and let go of our mouse.

21
00:01:00,400 --> 00:01:03,050
In the helper that pops up
we'll change the connection

22
00:01:03,050 --> 00:01:05,790
from outlet to action.

23
00:01:05,790 --> 00:01:09,680
The name we'll give is
addToCartPressed,

24
00:01:09,680 --> 00:01:12,970
the type will be AnyObject,
and the event

25
00:01:12,970 --> 00:01:15,582
should be Touch Up Inside.

26
00:01:15,582 --> 00:01:17,040
There's a bunch of
different events

27
00:01:17,040 --> 00:01:18,790
you can choose from
depending on what user

28
00:01:18,790 --> 00:01:20,890
action you want to respond to.

29
00:01:20,890 --> 00:01:23,019
For buttons, touch up
inside makes the most sense

30
00:01:23,019 --> 00:01:25,060
because it means that the
user taps on the button

31
00:01:25,060 --> 00:01:26,650
with their finger
and then let go,

32
00:01:26,650 --> 00:01:30,960
or touched up inside of
the buttons hit area.

33
00:01:30,960 --> 00:01:34,050
We'll leave the
argument as sender.

34
00:01:34,050 --> 00:01:36,710
When we hit connect, you can see
that an entirely new function

35
00:01:36,710 --> 00:01:40,300
got added with the @IBAction
keyword in front of it.

36
00:01:40,300 --> 00:01:44,920
Let's jump back into some
slides to see how this works.

37
00:01:44,920 --> 00:01:47,430
Here we can see the
addToCartPressed function that

38
00:01:47,430 --> 00:01:49,530
we created in our Swift file.

39
00:01:49,530 --> 00:01:53,860
Every time we tap the button
this function will run.

40
00:01:53,860 --> 00:01:56,120
You might have also
noticed the arrow void

41
00:01:56,120 --> 00:01:57,790
at the end of this function.

42
00:01:57,790 --> 00:02:00,060
That just means it
doesn't return any values

43
00:02:00,060 --> 00:02:01,570
after it's done running.

44
00:02:01,570 --> 00:02:05,480
It just runs whatever code is
inside of it and then stops.

45
00:02:05,480 --> 00:02:07,970
viewDidLoad was like
that, too, but being

46
00:02:07,970 --> 00:02:09,770
explicit about the
return type can

47
00:02:09,770 --> 00:02:11,640
help you quickly see
what a function is

48
00:02:11,640 --> 00:02:14,180
responsible for doing.

49
00:02:14,180 --> 00:02:16,690
If we add the print function
with the message button

50
00:02:16,690 --> 00:02:19,500
tapped, whenever we tap
the button that message

51
00:02:19,500 --> 00:02:22,530
will be logged to the console.

52
00:02:22,530 --> 00:02:25,740
If we build and run our app and
tap on the add to cart button,

53
00:02:25,740 --> 00:02:27,750
we'll see that the
console pops up and logs

54
00:02:27,750 --> 00:02:33,100
the message button tapped
every time we tap the button.

55
00:02:33,100 --> 00:02:35,710
Now it's your turn to create
an action in your project

56
00:02:35,710 --> 00:02:38,788
and take some challenges, and
I'll see you in the next level.


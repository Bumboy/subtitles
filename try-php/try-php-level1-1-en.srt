1
00:00:00,000 --> 00:00:03,590
[SINGING] What's that
shooting across the sky?

2
00:00:03,590 --> 00:00:08,530
A rocket, a meteor,
or a data type?

3
00:00:08,530 --> 00:00:13,740
With PHP, we'll make it
through with variables, arrays,

4
00:00:13,740 --> 00:00:14,550
and loops.

5
00:00:14,550 --> 00:00:17,560
As you track meteors
around the world,

6
00:00:17,560 --> 00:00:21,040
your coding knowledge
will unfurl.

7
00:00:21,040 --> 00:00:23,980
Shall we play a game?

8
00:00:23,980 --> 00:00:24,960
Yes, indeed.

9
00:00:24,960 --> 00:00:28,205
Let's join forces and Try PHP.

10
00:00:32,490 --> 00:00:34,290
Welcome to Try PHP.

11
00:00:34,290 --> 00:00:36,090
I'm Hampton and
we're going to learn

12
00:00:36,090 --> 00:00:38,170
the basics of the PHP language.

13
00:00:40,840 --> 00:00:42,450
So what will this course cover?

14
00:00:42,450 --> 00:00:46,230
Well, this is going to be our
core structure for Try PHP.

15
00:00:46,230 --> 00:00:47,730
In level 1, we're
going to look over

16
00:00:47,730 --> 00:00:50,430
syntax and basic variables.

17
00:00:50,430 --> 00:00:53,010
In level 2, we're going
to look over simple arrays

18
00:00:53,010 --> 00:00:54,690
and associative arrays.

19
00:00:54,690 --> 00:00:57,180
In level 3, we're going
to look over conditionals

20
00:00:57,180 --> 00:00:58,380
and operators.

21
00:00:58,380 --> 00:01:03,880
And in level 4, we're going to
look over looping constructs.

22
00:01:03,880 --> 00:01:07,210
What do you need to know to
get started with the Try PHP

23
00:01:07,210 --> 00:01:08,110
course?

24
00:01:08,110 --> 00:01:10,690
You might think that you need
to know a lot of programming

25
00:01:10,690 --> 00:01:11,590
to start with.

26
00:01:11,590 --> 00:01:12,940
Well that's not true.

27
00:01:12,940 --> 00:01:17,050
Really all you need is
some basic HTML and CSS.

28
00:01:17,050 --> 00:01:18,640
For that, you can
take our courses,

29
00:01:18,640 --> 00:01:24,030
which is Front-end Foundations
and Front-end Formations.

30
00:01:24,030 --> 00:01:25,230
Why PHP?

31
00:01:25,230 --> 00:01:26,430
Why now?

32
00:01:26,430 --> 00:01:29,010
PHP is a server-side
scripting language

33
00:01:29,010 --> 00:01:31,740
that's been around since 1997.

34
00:01:31,740 --> 00:01:33,630
And over the years,
it's grown into a very

35
00:01:33,630 --> 00:01:35,910
modern and performant tool.

36
00:01:35,910 --> 00:01:40,080
Here are a few tasks that PHP
helps us achieve very simply.

37
00:01:40,080 --> 00:01:44,760
It allows execution of code
inline with our HTML markup.

38
00:01:44,760 --> 00:01:49,380
It gives a simple reading and
processing of files and images.

39
00:01:49,380 --> 00:01:53,370
It gives us request and
response processing with forms.

40
00:01:53,370 --> 00:01:56,460
It's very high performance
and scales easily.

41
00:01:56,460 --> 00:02:01,144
Let's get started
looking at how PHP works.

42
00:02:01,144 --> 00:02:02,560
At the very
beginning, we're going

43
00:02:02,560 --> 00:02:06,760
to want to add PHP code
directly into our HTML file.

44
00:02:06,760 --> 00:02:10,000
What you see here is a
very simple HTML page

45
00:02:10,000 --> 00:02:13,780
that has a hello world block
inside of a paragraph tack.

46
00:02:13,780 --> 00:02:16,900
The output in our browser
will look something like this.

47
00:02:16,900 --> 00:02:17,520
Hello World.

48
00:02:20,330 --> 00:02:23,390
The first thing we have to
do is to rename our file

49
00:02:23,390 --> 00:02:28,010
so that the server knows we
want to process this file as PHP

50
00:02:28,010 --> 00:02:29,660
and not HTML.

51
00:02:29,660 --> 00:02:31,910
So all we need to do
is rename the file

52
00:02:31,910 --> 00:02:35,450
from dot HTML to dot PHP.

53
00:02:35,450 --> 00:02:38,850
Even though we've changed the
file extension to dot PHP,

54
00:02:38,850 --> 00:02:41,420
the output remains
the same, which

55
00:02:41,420 --> 00:02:46,010
means we can mix HTML and
PHP code in the same file.

56
00:02:46,010 --> 00:02:51,430
Our next step is going to
be add code to the file.

57
00:02:51,430 --> 00:02:52,840
What's different now?

58
00:02:52,840 --> 00:02:56,140
Normally, we send a
URL to request a page

59
00:02:56,140 --> 00:03:00,144
and the server responds to
us with some HTML and CSS.

60
00:03:00,144 --> 00:03:01,810
What's going to be
different since we've

61
00:03:01,810 --> 00:03:04,360
changed our file to dot PHP.

62
00:03:04,360 --> 00:03:06,850
How is this server
going to handle it?

63
00:03:06,850 --> 00:03:11,050
Now that it's a PHP file, when
a user requests from the server,

64
00:03:11,050 --> 00:03:14,770
the server sees that it's a PHP
file, runs through the file,

65
00:03:14,770 --> 00:03:18,670
and validates that it's
properly formed PHP.

66
00:03:18,670 --> 00:03:22,690
The server then runs all the
code inside of the PHP file.

67
00:03:22,690 --> 00:03:25,090
After running all of
that code, the server

68
00:03:25,090 --> 00:03:28,300
sends back the dynamically
generated output back

69
00:03:28,300 --> 00:03:29,530
to your browser.

70
00:03:29,530 --> 00:03:34,690
That output is
usually HTML and CSS.

71
00:03:34,690 --> 00:03:37,751
If we want to add some
PHP code to our file,

72
00:03:37,751 --> 00:03:39,250
we're going to need
to use something

73
00:03:39,250 --> 00:03:42,430
called a code block,
which looks like this.

74
00:03:42,430 --> 00:03:45,630
A code block starts
with a less than symbol,

75
00:03:45,630 --> 00:03:50,590
a question mark, followed
immediately by PHP, a space.

76
00:03:50,590 --> 00:03:53,590
And then to close that code
block you add another question

77
00:03:53,590 --> 00:03:55,600
mark and a greater than symbol.

78
00:03:55,600 --> 00:03:58,360
Anything that falls in
between these two tags

79
00:03:58,360 --> 00:04:02,950
tells the server we want to
execute this as PHP code.

80
00:04:02,950 --> 00:04:06,220
Let's add some code and see what
it looks like when it's output.

81
00:04:08,870 --> 00:04:11,570
The first thing we're going
to do, as you might expect,

82
00:04:11,570 --> 00:04:13,760
is to say hello to the world.

83
00:04:13,760 --> 00:04:16,100
We're going to do this by
using a built in function

84
00:04:16,100 --> 00:04:18,950
from PHP called echo.

85
00:04:18,950 --> 00:04:22,490
First, we're going to type the
function key word echo followed

86
00:04:22,490 --> 00:04:25,280
by a space, and then
a set of single quotes

87
00:04:25,280 --> 00:04:29,120
with the string, or string of
characters, in between them.

88
00:04:29,120 --> 00:04:32,400
To tell the PHP interpreter
that we're done with this line,

89
00:04:32,400 --> 00:04:34,160
we're going to add a semi-colon.

90
00:04:34,160 --> 00:04:38,840
You will do this for the
end of every line in PHP.

91
00:04:38,840 --> 00:04:41,840
Once it's executed, this
will place a hello world

92
00:04:41,840 --> 00:04:44,175
inside of the paragraph
tags on our page.

93
00:04:46,900 --> 00:04:49,210
Next, we should talk
about variables.

94
00:04:49,210 --> 00:04:53,170
Variables, as their name
alludes to, vary in value.

95
00:04:53,170 --> 00:04:55,030
There are many uses
for a variable,

96
00:04:55,030 --> 00:04:57,180
but mostly they're
a placeholder--

97
00:04:57,180 --> 00:04:59,200
a placeholder for your data.

98
00:04:59,200 --> 00:05:00,700
To define a variable,
you're going

99
00:05:00,700 --> 00:05:02,650
to start with a
dollar sign, followed

100
00:05:02,650 --> 00:05:07,720
by a word or words separated
by underscores, not spaces.

101
00:05:07,720 --> 00:05:10,060
Here you can see we have
a variable called name.

102
00:05:10,060 --> 00:05:12,580
To put data into
our variable, we

103
00:05:12,580 --> 00:05:15,700
use an assignment
operator or an equal sign.

104
00:05:15,700 --> 00:05:18,820
Next, we'll assign a
string to the name variable

105
00:05:18,820 --> 00:05:21,970
by placing it inside a
set of single quotes.

106
00:05:21,970 --> 00:05:25,150
You can use double quotes,
but standard practice

107
00:05:25,150 --> 00:05:27,520
is to use double
quotes only when

108
00:05:27,520 --> 00:05:29,446
you're doing string evaluation.

109
00:05:29,446 --> 00:05:30,820
We're going to
get to that later,

110
00:05:30,820 --> 00:05:33,950
but for now, just
use single quotes.

111
00:05:33,950 --> 00:05:36,280
Notice that after
creating our variable,

112
00:05:36,280 --> 00:05:39,820
nothing is automatically
displayed into our output.

113
00:05:39,820 --> 00:05:41,620
In order to do that,
we're going to want

114
00:05:41,620 --> 00:05:46,400
to use the echo function to echo
the content of our variable.

115
00:05:46,400 --> 00:05:51,160
Notice that now there are two
lines inside of our code block.

116
00:05:51,160 --> 00:05:53,880
As far as the PHP
interpreter is concern,

117
00:05:53,880 --> 00:05:55,630
whitespace is irrelevant.

118
00:05:55,630 --> 00:05:59,470
PHP standards do help us choose
the right amount of whitespace

119
00:05:59,470 --> 00:06:05,020
to use in our code, but
it's all for readability.

120
00:06:05,020 --> 00:06:07,540
There are some rules
when creating variables.

121
00:06:07,540 --> 00:06:09,610
They always start
with a dollar sign,

122
00:06:09,610 --> 00:06:12,700
they always use underscores
instead of spaces,

123
00:06:12,700 --> 00:06:16,480
you can't use hyphens, and
you can't start with a number.

124
00:06:16,480 --> 00:06:20,065
Here you can see some valid
and invalid variable names.

125
00:06:23,920 --> 00:06:27,370
Another great feature of
PHP is that your code blocks

126
00:06:27,370 --> 00:06:29,392
can go anywhere in the file.

127
00:06:29,392 --> 00:06:30,850
We're going to move
our definitions

128
00:06:30,850 --> 00:06:33,310
to the top of the
file, as you can see,

129
00:06:33,310 --> 00:06:36,920
and it still works
exactly as it did before.

130
00:06:36,920 --> 00:06:39,790
Now our variable is defined
at the top of the file,

131
00:06:39,790 --> 00:06:43,630
at the first line, but not used
until later on in the file,

132
00:06:43,630 --> 00:06:47,530
but still the output
remains the same.

133
00:06:47,530 --> 00:06:51,230
We can also use the same
variable in multiple locations.

134
00:06:54,100 --> 00:06:56,210
What have we learned so far?

135
00:06:56,210 --> 00:06:59,800
We've gone over syntax
basics, code blocks,

136
00:06:59,800 --> 00:07:01,735
how the server
handles and processes

137
00:07:01,735 --> 00:07:06,100
PHP files, variables
and naming conventions,

138
00:07:06,100 --> 00:07:09,040
and the echo statement.

139
00:07:09,040 --> 00:07:11,410
Now it's time for you
to write your first PHP

140
00:07:11,410 --> 00:07:13,250
code in the challenges.

141
00:07:13,250 --> 00:07:14,880
Have fun.

142
00:07:14,880 --> 00:07:16,302
.

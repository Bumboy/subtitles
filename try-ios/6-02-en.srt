1
00:00:01,476 --> 00:00:05,140
I'm Gregg Pollack, and you're
watching Level Six of Try iOS,

2
00:00:05,140 --> 00:00:09,120
where we're going to be talking
about AFNetworking.

3
00:00:09,120 --> 00:00:10,600
In this level, we're going
to be learning about the

4
00:00:10,600 --> 00:00:12,830
AFNetworking library.

5
00:00:12,830 --> 00:00:15,110
It'll show us how to load
images from the

6
00:00:15,110 --> 00:00:16,800
internet into our app.

7
00:00:16,800 --> 00:00:19,610
We'll then figure out how to
take JSON from the internet

8
00:00:19,610 --> 00:00:21,820
and parse it into
our application.

9
00:00:21,820 --> 00:00:24,700
Then we'll learn about the
NSDictionary data structure.

10
00:00:24,700 --> 00:00:27,850
And finally, we'll use all of
these techniques to complete

11
00:00:27,850 --> 00:00:29,100
our FeedTableViewController.

12
00:00:31,060 --> 00:00:33,230
So remember our
ProfileViewController?

13
00:00:33,230 --> 00:00:35,640
Remember the one that
we made scroll?

14
00:00:35,640 --> 00:00:38,570
Well, what if that image that
you saw in there we wanted to

15
00:00:38,570 --> 00:00:41,370
load from a URL from
the internet?

16
00:00:41,370 --> 00:00:43,670
One way we could do that
is by using this

17
00:00:43,670 --> 00:00:45,590
AFNetworking library.

18
00:00:45,590 --> 00:00:48,470
It was created by Matt Thompson
and Scott Raymond

19
00:00:48,470 --> 00:00:50,280
when they worked over
at Gowalla.

20
00:00:50,280 --> 00:00:54,270
It is a open source library
they created.

21
00:00:54,270 --> 00:00:57,670
There's lots of ways in iOS to
do networking requests, and

22
00:00:57,670 --> 00:00:59,956
this is just one popular
way to do them.

23
00:00:59,956 --> 00:01:03,220
This isn't the only way to do
network requests in iOS.

24
00:01:03,220 --> 00:01:05,450
One way to download the
AFNetworking files to get them

25
00:01:05,450 --> 00:01:07,450
into your application
is to head over to

26
00:01:07,450 --> 00:01:08,610
their GitHub page.

27
00:01:08,610 --> 00:01:13,040
There, you can download the
zip, unzip them, in your X

28
00:01:13,040 --> 00:01:16,680
code, click Add files
to your project.

29
00:01:16,680 --> 00:01:18,530
Then you're going to navigate
to that directory.

30
00:01:18,530 --> 00:01:21,160
And inside of that unzipped
directory, there's a

31
00:01:21,160 --> 00:01:23,680
AFNetworking directory, and it's
that that you want to add

32
00:01:23,680 --> 00:01:24,980
to your app.

33
00:01:24,980 --> 00:01:27,220
There's other things inside, as
you can see there, inside

34
00:01:27,220 --> 00:01:29,930
of that unzipped directory,
one of which is an example

35
00:01:29,930 --> 00:01:32,480
folder, which is worth a look,
if you want other examples of

36
00:01:32,480 --> 00:01:34,980
how to use this library.

37
00:01:34,980 --> 00:01:37,400
Now, let's jump back into our
ProfileViewController.

38
00:01:37,400 --> 00:01:38,910
Here's our old code,
where we're

39
00:01:38,910 --> 00:01:41,140
creating a UI image view.

40
00:01:41,140 --> 00:01:44,330
However, we want to load our
image from this URL you see

41
00:01:44,330 --> 00:01:48,160
here, and we also are going to
need a placeholder image that

42
00:01:48,160 --> 00:01:50,990
is going to be shown in its
place until our application is

43
00:01:50,990 --> 00:01:53,760
done downloading the image
off the internet.

44
00:01:53,760 --> 00:01:56,580
To use AFNetworking, we only
want to include the parts of

45
00:01:56,580 --> 00:01:58,470
it that we're using
in this file.

46
00:01:58,470 --> 00:02:01,770
In this case, it's a file
that looks like this.

47
00:02:01,770 --> 00:02:05,230
You see how it says UIImageView
plus AFNetworking?

48
00:02:05,230 --> 00:02:08,240
What that's telling us is that
this file loads additional

49
00:02:08,240 --> 00:02:11,960
behavior into the UIImageView
class, which

50
00:02:11,960 --> 00:02:13,570
we'll see in a minute.

51
00:02:13,570 --> 00:02:15,120
We're then just going
to initialize our

52
00:02:15,120 --> 00:02:16,610
ProfileImageView.

53
00:02:16,610 --> 00:02:20,550
And then we're going to call
setImageWithURL on our

54
00:02:20,550 --> 00:02:22,120
UIImageView.

55
00:02:22,120 --> 00:02:24,960
That's that new method
that it added.

56
00:02:24,960 --> 00:02:29,410
Then we need to send in those
parameters, the URL and the

57
00:02:29,410 --> 00:02:32,562
placeholder image
as a UI image.

58
00:02:32,562 --> 00:02:35,481
Using a placeholder image isn't
required, but it's a

59
00:02:35,481 --> 00:02:36,250
good practice.

60
00:02:36,250 --> 00:02:36,930
Right.

61
00:02:36,930 --> 00:02:39,590
This code would work if we
didn't have a placeholder

62
00:02:39,590 --> 00:02:43,140
image, but it's a real good
practice to always have one in

63
00:02:43,140 --> 00:02:45,320
case the image you're trying
to fetch off the internet

64
00:02:45,320 --> 00:02:47,530
takes a while to download,
or it's not there.

65
00:02:47,530 --> 00:02:50,890
That way, your user experience
doesn't suffer.

66
00:02:50,890 --> 00:02:53,500
All right, now we're pulling
that image from the internet,

67
00:02:53,500 --> 00:02:56,540
but what if we wanted to pull
all the profile data off the

68
00:02:56,540 --> 00:02:59,750
internet from a URL that
looked like this?

69
00:02:59,750 --> 00:03:02,090
And here's the JSON that
it might return.

70
00:03:02,090 --> 00:03:05,740
That's what we want to use
to render out the page.

71
00:03:05,740 --> 00:03:08,020
Before we get into that, we need
to make sure everybody

72
00:03:08,020 --> 00:03:10,500
understands the difference
between synchronous and

73
00:03:10,500 --> 00:03:12,090
asynchronous code.

74
00:03:12,090 --> 00:03:14,730
So if we were to write this out
using synchronous code,

75
00:03:14,730 --> 00:03:16,850
we'd want to go and fetch the
JSON content from the

76
00:03:16,850 --> 00:03:20,790
internet, then, once that's
returned, load as a Subview.

77
00:03:20,790 --> 00:03:23,650
And then lastly, we could
add other subviews.

78
00:03:23,650 --> 00:03:27,090
So basically, it's going to
fetch the JSON code, and it's

79
00:03:27,090 --> 00:03:29,010
going to stop.

80
00:03:29,010 --> 00:03:33,150
It's going to stop until
the request gets back.

81
00:03:33,150 --> 00:03:36,490
Then once it gets back, it's
going to load it as a Subview,

82
00:03:36,490 --> 00:03:39,660
and then do whatever else
comes next on the page.

83
00:03:39,660 --> 00:03:40,920
That's synchronous.

84
00:03:40,920 --> 00:03:44,310
If we wanted to do this
asynchronously, it would go

85
00:03:44,310 --> 00:03:48,790
fetch the JSON code, once that's
returned, load it as a

86
00:03:48,790 --> 00:03:51,150
Subview, and then add
other subviews.

87
00:03:51,150 --> 00:03:53,190
So here's how execution
works here.

88
00:03:53,190 --> 00:03:55,200
It's going to go
fetch the JSON.

89
00:03:55,200 --> 00:03:57,850
While it's waiting to return,
it's going to

90
00:03:57,850 --> 00:03:59,920
continue down the page.

91
00:03:59,920 --> 00:04:02,560
And only once it gets returned,
then it goes back

92
00:04:02,560 --> 00:04:07,550
and it calls back to load
that data as a Subview.

93
00:04:07,550 --> 00:04:12,100
So that's sort of a non-blocking
way of doing it.

94
00:04:12,100 --> 00:04:13,900
It doesn't stop the world.

95
00:04:13,900 --> 00:04:18,150
Code continues, and then once
that request returns, it then

96
00:04:18,150 --> 00:04:19,690
loads the Subview.

97
00:04:19,690 --> 00:04:23,210
We call that a callback because
it's calling back and

98
00:04:23,210 --> 00:04:26,060
running the code once the
networking code gets back from

99
00:04:26,060 --> 00:04:28,930
the internet.

100
00:04:28,930 --> 00:04:31,110
Now, let's jump back into our
ProfileViewControllers

101
00:04:31,110 --> 00:04:34,490
viewDidLoad method, and let's
call out to the internet.

102
00:04:34,490 --> 00:04:37,310
We need to import the
AFJSONRequestOperation, which

103
00:04:37,310 --> 00:04:38,760
is what we're about to use.

104
00:04:38,760 --> 00:04:41,950
And now I'm going to show you
some pseudo code so that when

105
00:04:41,950 --> 00:04:45,310
I show you the real code you
understand what's going on.

106
00:04:45,310 --> 00:04:48,910
First we need to create an NSURL
and set our endpoint.

107
00:04:48,910 --> 00:04:54,300
Then we're going to wrap that
URL inside of a NSURLRequest.

108
00:04:54,300 --> 00:04:57,560
Then we're going to create an
AFJSONRequestOperation.

109
00:04:57,560 --> 00:04:59,860
That's the operation that's
going to do the call to the

110
00:04:59,860 --> 00:05:01,560
internet when we tell it to.

111
00:05:01,560 --> 00:05:03,320
Then we specify our callbacks.

112
00:05:03,320 --> 00:05:06,070
So if it's successful, then we
can do something with the data

113
00:05:06,070 --> 00:05:07,560
that gets returned.

114
00:05:07,560 --> 00:05:10,430
And if the request fails, well,
we can just log out the

115
00:05:10,430 --> 00:05:11,350
error message.

116
00:05:11,350 --> 00:05:12,790
And then finally, we tell
it when we want

117
00:05:12,790 --> 00:05:15,080
to start this operation.

118
00:05:15,080 --> 00:05:17,920
All right, so let's take a look
at the actual code now.

119
00:05:17,920 --> 00:05:20,320
So here's where we
create the URL,

120
00:05:20,320 --> 00:05:22,540
initialize it with a string.

121
00:05:22,540 --> 00:05:26,340
We're going to wrap that URL
inside a NSURLRequest.

122
00:05:26,340 --> 00:05:29,620
Then we're going to create our
AFJSONRequestOperation and

123
00:05:29,620 --> 00:05:31,530
send in the request
as a parameter.

124
00:05:31,530 --> 00:05:35,190
To do asynchronous operations in
Objective C, we're going to

125
00:05:35,190 --> 00:05:37,080
use a block.

126
00:05:37,080 --> 00:05:38,900
So we're basically sending
in a bunch of

127
00:05:38,900 --> 00:05:41,790
code as a block parameter.

128
00:05:41,790 --> 00:05:44,150
So here you can see that
little caret there.

129
00:05:44,150 --> 00:05:47,550
That signifies this parameter
is a block.

130
00:05:47,550 --> 00:05:50,030
Then, as you can see down here,
we have another block,

131
00:05:50,030 --> 00:05:53,155
which specifies what to do
if the request fails.

132
00:05:53,155 --> 00:05:55,700
Then at the bottom, we just send
the start message into

133
00:05:55,700 --> 00:05:56,950
the operation.

134
00:05:58,900 --> 00:06:01,670
Now it's time for you to jump
into the challenges and start

135
00:06:01,670 --> 00:06:02,920
playing with AFNetworking.

136
00:00:00,000 --> 00:00:00,000
00:06:02,920 --> 00:06:03,820